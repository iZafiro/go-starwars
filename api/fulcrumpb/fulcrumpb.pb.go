// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/fulcrumpb.proto

package fulcrumpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
}

func (x *GetVectorRequest) Reset() {
	*x = GetVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVectorRequest) ProtoMessage() {}

func (x *GetVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVectorRequest.ProtoReflect.Descriptor instead.
func (*GetVectorRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{0}
}

func (x *GetVectorRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

type GetVectorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector []int32 `protobuf:"varint,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *GetVectorResponse) Reset() {
	*x = GetVectorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVectorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVectorResponse) ProtoMessage() {}

func (x *GetVectorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVectorResponse.ProtoReflect.Descriptor instead.
func (*GetVectorResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{1}
}

func (x *GetVectorResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type GetNumberRebelsFulcrumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	City   string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *GetNumberRebelsFulcrumRequest) Reset() {
	*x = GetNumberRebelsFulcrumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNumberRebelsFulcrumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNumberRebelsFulcrumRequest) ProtoMessage() {}

func (x *GetNumberRebelsFulcrumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNumberRebelsFulcrumRequest.ProtoReflect.Descriptor instead.
func (*GetNumberRebelsFulcrumRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{2}
}

func (x *GetNumberRebelsFulcrumRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

func (x *GetNumberRebelsFulcrumRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type GetNumberRebelsFulcrumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Number  int32   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Vector  []int32 `protobuf:"varint,3,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *GetNumberRebelsFulcrumResponse) Reset() {
	*x = GetNumberRebelsFulcrumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNumberRebelsFulcrumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNumberRebelsFulcrumResponse) ProtoMessage() {}

func (x *GetNumberRebelsFulcrumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNumberRebelsFulcrumResponse.ProtoReflect.Descriptor instead.
func (*GetNumberRebelsFulcrumResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{3}
}

func (x *GetNumberRebelsFulcrumResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetNumberRebelsFulcrumResponse) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GetNumberRebelsFulcrumResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type GetLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{4}
}

func (x *GetLogsRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GetLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []string `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetLogsResponse) Reset() {
	*x = GetLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsResponse) ProtoMessage() {}

func (x *GetLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLogsResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{5}
}

func (x *GetLogsResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

type MergeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *MergeRequest) Reset() {
	*x = MergeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeRequest) ProtoMessage() {}

func (x *MergeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeRequest.ProtoReflect.Descriptor instead.
func (*MergeRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{6}
}

func (x *MergeRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type MergeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *MergeResponse) Reset() {
	*x = MergeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeResponse) ProtoMessage() {}

func (x *MergeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeResponse.ProtoReflect.Descriptor instead.
func (*MergeResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{7}
}

func (x *MergeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AddCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	City   string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *AddCityRequest) Reset() {
	*x = AddCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCityRequest) ProtoMessage() {}

func (x *AddCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCityRequest.ProtoReflect.Descriptor instead.
func (*AddCityRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{8}
}

func (x *AddCityRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

func (x *AddCityRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddCityRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type AddCityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vector  []int32 `protobuf:"varint,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *AddCityResponse) Reset() {
	*x = AddCityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCityResponse) ProtoMessage() {}

func (x *AddCityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCityResponse.ProtoReflect.Descriptor instead.
func (*AddCityResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{9}
}

func (x *AddCityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddCityResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type UpdateNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet  string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	OldCity string `protobuf:"bytes,2,opt,name=oldCity,proto3" json:"oldCity,omitempty"`
	NewCity string `protobuf:"bytes,3,opt,name=newCity,proto3" json:"newCity,omitempty"`
}

func (x *UpdateNameRequest) Reset() {
	*x = UpdateNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameRequest) ProtoMessage() {}

func (x *UpdateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateNameRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateNameRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

func (x *UpdateNameRequest) GetOldCity() string {
	if x != nil {
		return x.OldCity
	}
	return ""
}

func (x *UpdateNameRequest) GetNewCity() string {
	if x != nil {
		return x.NewCity
	}
	return ""
}

type UpdateNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vector  []int32 `protobuf:"varint,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *UpdateNameResponse) Reset() {
	*x = UpdateNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameResponse) ProtoMessage() {}

func (x *UpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateNameResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type UpdateNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	City   string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *UpdateNumberRequest) Reset() {
	*x = UpdateNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNumberRequest) ProtoMessage() {}

func (x *UpdateNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNumberRequest.ProtoReflect.Descriptor instead.
func (*UpdateNumberRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNumberRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

func (x *UpdateNumberRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateNumberRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type UpdateNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vector  []int32 `protobuf:"varint,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *UpdateNumberResponse) Reset() {
	*x = UpdateNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNumberResponse) ProtoMessage() {}

func (x *UpdateNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNumberResponse.ProtoReflect.Descriptor instead.
func (*UpdateNumberResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateNumberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateNumberResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type DeleteCityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Planet string `protobuf:"bytes,1,opt,name=planet,proto3" json:"planet,omitempty"`
	City   string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *DeleteCityRequest) Reset() {
	*x = DeleteCityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCityRequest) ProtoMessage() {}

func (x *DeleteCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCityRequest.ProtoReflect.Descriptor instead.
func (*DeleteCityRequest) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteCityRequest) GetPlanet() string {
	if x != nil {
		return x.Planet
	}
	return ""
}

func (x *DeleteCityRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type DeleteCityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Vector  []int32 `protobuf:"varint,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *DeleteCityResponse) Reset() {
	*x = DeleteCityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_fulcrumpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCityResponse) ProtoMessage() {}

func (x *DeleteCityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_fulcrumpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCityResponse.ProtoReflect.Descriptor instead.
func (*DeleteCityResponse) Descriptor() ([]byte, []int) {
	return file_api_fulcrumpb_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteCityResponse) GetVector() []int32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

var File_api_fulcrumpb_proto protoreflect.FileDescriptor

var file_api_fulcrumpb_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62,
	0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x22, 0x2b, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x4b, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x73, 0x46, 0x75, 0x6c, 0x63,
	0x72, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x6a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x73, 0x46, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x22, 0x24, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x54, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x5f, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6c,
	0x64, 0x43, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x43, 0x69, 0x74, 0x79, 0x22, 0x46,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x59, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x32, 0xfe, 0x04, 0x0a, 0x0e, 0x46, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x62, 0x65, 0x6c, 0x73, 0x46, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x12, 0x28, 0x2e, 0x66, 0x75,
	0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x73, 0x46, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x62, 0x65, 0x6c,
	0x73, 0x46, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x19, 0x2e,
	0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72,
	0x75, 0x6d, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12,
	0x17, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72,
	0x75, 0x6d, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x19, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x75, 0x6c,
	0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x75, 0x6c, 0x63, 0x72, 0x75, 0x6d, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c,
	0x63, 0x72, 0x75, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_fulcrumpb_proto_rawDescOnce sync.Once
	file_api_fulcrumpb_proto_rawDescData = file_api_fulcrumpb_proto_rawDesc
)

func file_api_fulcrumpb_proto_rawDescGZIP() []byte {
	file_api_fulcrumpb_proto_rawDescOnce.Do(func() {
		file_api_fulcrumpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_fulcrumpb_proto_rawDescData)
	})
	return file_api_fulcrumpb_proto_rawDescData
}

var file_api_fulcrumpb_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_fulcrumpb_proto_goTypes = []interface{}{
	(*GetVectorRequest)(nil),               // 0: fulcrumpb.GetVectorRequest
	(*GetVectorResponse)(nil),              // 1: fulcrumpb.GetVectorResponse
	(*GetNumberRebelsFulcrumRequest)(nil),  // 2: fulcrumpb.GetNumberRebelsFulcrumRequest
	(*GetNumberRebelsFulcrumResponse)(nil), // 3: fulcrumpb.GetNumberRebelsFulcrumResponse
	(*GetLogsRequest)(nil),                 // 4: fulcrumpb.GetLogsRequest
	(*GetLogsResponse)(nil),                // 5: fulcrumpb.GetLogsResponse
	(*MergeRequest)(nil),                   // 6: fulcrumpb.MergeRequest
	(*MergeResponse)(nil),                  // 7: fulcrumpb.MergeResponse
	(*AddCityRequest)(nil),                 // 8: fulcrumpb.AddCityRequest
	(*AddCityResponse)(nil),                // 9: fulcrumpb.AddCityResponse
	(*UpdateNameRequest)(nil),              // 10: fulcrumpb.UpdateNameRequest
	(*UpdateNameResponse)(nil),             // 11: fulcrumpb.UpdateNameResponse
	(*UpdateNumberRequest)(nil),            // 12: fulcrumpb.UpdateNumberRequest
	(*UpdateNumberResponse)(nil),           // 13: fulcrumpb.UpdateNumberResponse
	(*DeleteCityRequest)(nil),              // 14: fulcrumpb.DeleteCityRequest
	(*DeleteCityResponse)(nil),             // 15: fulcrumpb.DeleteCityResponse
}
var file_api_fulcrumpb_proto_depIdxs = []int32{
	0,  // 0: fulcrumpb.FulcrumService.GetVector:input_type -> fulcrumpb.GetVectorRequest
	2,  // 1: fulcrumpb.FulcrumService.GetNumberRebelsFulcrum:input_type -> fulcrumpb.GetNumberRebelsFulcrumRequest
	4,  // 2: fulcrumpb.FulcrumService.GetLogs:input_type -> fulcrumpb.GetLogsRequest
	6,  // 3: fulcrumpb.FulcrumService.Merge:input_type -> fulcrumpb.MergeRequest
	8,  // 4: fulcrumpb.FulcrumService.AddCity:input_type -> fulcrumpb.AddCityRequest
	10, // 5: fulcrumpb.FulcrumService.UpdateName:input_type -> fulcrumpb.UpdateNameRequest
	12, // 6: fulcrumpb.FulcrumService.UpdateNumber:input_type -> fulcrumpb.UpdateNumberRequest
	14, // 7: fulcrumpb.FulcrumService.DeleteCity:input_type -> fulcrumpb.DeleteCityRequest
	1,  // 8: fulcrumpb.FulcrumService.GetVector:output_type -> fulcrumpb.GetVectorResponse
	3,  // 9: fulcrumpb.FulcrumService.GetNumberRebelsFulcrum:output_type -> fulcrumpb.GetNumberRebelsFulcrumResponse
	5,  // 10: fulcrumpb.FulcrumService.GetLogs:output_type -> fulcrumpb.GetLogsResponse
	7,  // 11: fulcrumpb.FulcrumService.Merge:output_type -> fulcrumpb.MergeResponse
	9,  // 12: fulcrumpb.FulcrumService.AddCity:output_type -> fulcrumpb.AddCityResponse
	11, // 13: fulcrumpb.FulcrumService.UpdateName:output_type -> fulcrumpb.UpdateNameResponse
	13, // 14: fulcrumpb.FulcrumService.UpdateNumber:output_type -> fulcrumpb.UpdateNumberResponse
	15, // 15: fulcrumpb.FulcrumService.DeleteCity:output_type -> fulcrumpb.DeleteCityResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_api_fulcrumpb_proto_init() }
func file_api_fulcrumpb_proto_init() {
	if File_api_fulcrumpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_fulcrumpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVectorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNumberRebelsFulcrumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNumberRebelsFulcrumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_fulcrumpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_fulcrumpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_fulcrumpb_proto_goTypes,
		DependencyIndexes: file_api_fulcrumpb_proto_depIdxs,
		MessageInfos:      file_api_fulcrumpb_proto_msgTypes,
	}.Build()
	File_api_fulcrumpb_proto = out.File
	file_api_fulcrumpb_proto_rawDesc = nil
	file_api_fulcrumpb_proto_goTypes = nil
	file_api_fulcrumpb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FulcrumServiceClient is the client API for FulcrumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FulcrumServiceClient interface {
	GetVector(ctx context.Context, in *GetVectorRequest, opts ...grpc.CallOption) (*GetVectorResponse, error)
	GetNumberRebelsFulcrum(ctx context.Context, in *GetNumberRebelsFulcrumRequest, opts ...grpc.CallOption) (*GetNumberRebelsFulcrumResponse, error)
	GetLogs(ctx context.Context, in *GetLogsRequest, opts ...grpc.CallOption) (*GetLogsResponse, error)
	Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeResponse, error)
	AddCity(ctx context.Context, in *AddCityRequest, opts ...grpc.CallOption) (*AddCityResponse, error)
	UpdateName(ctx context.Context, in *UpdateNameRequest, opts ...grpc.CallOption) (*UpdateNameResponse, error)
	UpdateNumber(ctx context.Context, in *UpdateNumberRequest, opts ...grpc.CallOption) (*UpdateNumberResponse, error)
	DeleteCity(ctx context.Context, in *DeleteCityRequest, opts ...grpc.CallOption) (*DeleteCityResponse, error)
}

type fulcrumServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFulcrumServiceClient(cc grpc.ClientConnInterface) FulcrumServiceClient {
	return &fulcrumServiceClient{cc}
}

func (c *fulcrumServiceClient) GetVector(ctx context.Context, in *GetVectorRequest, opts ...grpc.CallOption) (*GetVectorResponse, error) {
	out := new(GetVectorResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/GetVector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) GetNumberRebelsFulcrum(ctx context.Context, in *GetNumberRebelsFulcrumRequest, opts ...grpc.CallOption) (*GetNumberRebelsFulcrumResponse, error) {
	out := new(GetNumberRebelsFulcrumResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/GetNumberRebelsFulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) GetLogs(ctx context.Context, in *GetLogsRequest, opts ...grpc.CallOption) (*GetLogsResponse, error) {
	out := new(GetLogsResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/GetLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) Merge(ctx context.Context, in *MergeRequest, opts ...grpc.CallOption) (*MergeResponse, error) {
	out := new(MergeResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/Merge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) AddCity(ctx context.Context, in *AddCityRequest, opts ...grpc.CallOption) (*AddCityResponse, error) {
	out := new(AddCityResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/AddCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) UpdateName(ctx context.Context, in *UpdateNameRequest, opts ...grpc.CallOption) (*UpdateNameResponse, error) {
	out := new(UpdateNameResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/UpdateName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) UpdateNumber(ctx context.Context, in *UpdateNumberRequest, opts ...grpc.CallOption) (*UpdateNumberResponse, error) {
	out := new(UpdateNumberResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/UpdateNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fulcrumServiceClient) DeleteCity(ctx context.Context, in *DeleteCityRequest, opts ...grpc.CallOption) (*DeleteCityResponse, error) {
	out := new(DeleteCityResponse)
	err := c.cc.Invoke(ctx, "/fulcrumpb.FulcrumService/DeleteCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FulcrumServiceServer is the server API for FulcrumService service.
type FulcrumServiceServer interface {
	GetVector(context.Context, *GetVectorRequest) (*GetVectorResponse, error)
	GetNumberRebelsFulcrum(context.Context, *GetNumberRebelsFulcrumRequest) (*GetNumberRebelsFulcrumResponse, error)
	GetLogs(context.Context, *GetLogsRequest) (*GetLogsResponse, error)
	Merge(context.Context, *MergeRequest) (*MergeResponse, error)
	AddCity(context.Context, *AddCityRequest) (*AddCityResponse, error)
	UpdateName(context.Context, *UpdateNameRequest) (*UpdateNameResponse, error)
	UpdateNumber(context.Context, *UpdateNumberRequest) (*UpdateNumberResponse, error)
	DeleteCity(context.Context, *DeleteCityRequest) (*DeleteCityResponse, error)
}

// UnimplementedFulcrumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFulcrumServiceServer struct {
}

func (*UnimplementedFulcrumServiceServer) GetVector(context.Context, *GetVectorRequest) (*GetVectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVector not implemented")
}
func (*UnimplementedFulcrumServiceServer) GetNumberRebelsFulcrum(context.Context, *GetNumberRebelsFulcrumRequest) (*GetNumberRebelsFulcrumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNumberRebelsFulcrum not implemented")
}
func (*UnimplementedFulcrumServiceServer) GetLogs(context.Context, *GetLogsRequest) (*GetLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLogs not implemented")
}
func (*UnimplementedFulcrumServiceServer) Merge(context.Context, *MergeRequest) (*MergeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Merge not implemented")
}
func (*UnimplementedFulcrumServiceServer) AddCity(context.Context, *AddCityRequest) (*AddCityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCity not implemented")
}
func (*UnimplementedFulcrumServiceServer) UpdateName(context.Context, *UpdateNameRequest) (*UpdateNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateName not implemented")
}
func (*UnimplementedFulcrumServiceServer) UpdateNumber(context.Context, *UpdateNumberRequest) (*UpdateNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNumber not implemented")
}
func (*UnimplementedFulcrumServiceServer) DeleteCity(context.Context, *DeleteCityRequest) (*DeleteCityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCity not implemented")
}

func RegisterFulcrumServiceServer(s *grpc.Server, srv FulcrumServiceServer) {
	s.RegisterService(&_FulcrumService_serviceDesc, srv)
}

func _FulcrumService_GetVector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).GetVector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/GetVector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).GetVector(ctx, req.(*GetVectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_GetNumberRebelsFulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNumberRebelsFulcrumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).GetNumberRebelsFulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/GetNumberRebelsFulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).GetNumberRebelsFulcrum(ctx, req.(*GetNumberRebelsFulcrumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_GetLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).GetLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/GetLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).GetLogs(ctx, req.(*GetLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_Merge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MergeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).Merge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/Merge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).Merge(ctx, req.(*MergeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_AddCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).AddCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/AddCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).AddCity(ctx, req.(*AddCityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_UpdateName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).UpdateName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/UpdateName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).UpdateName(ctx, req.(*UpdateNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_UpdateNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).UpdateNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/UpdateNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).UpdateNumber(ctx, req.(*UpdateNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FulcrumService_DeleteCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FulcrumServiceServer).DeleteCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fulcrumpb.FulcrumService/DeleteCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FulcrumServiceServer).DeleteCity(ctx, req.(*DeleteCityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FulcrumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fulcrumpb.FulcrumService",
	HandlerType: (*FulcrumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVector",
			Handler:    _FulcrumService_GetVector_Handler,
		},
		{
			MethodName: "GetNumberRebelsFulcrum",
			Handler:    _FulcrumService_GetNumberRebelsFulcrum_Handler,
		},
		{
			MethodName: "GetLogs",
			Handler:    _FulcrumService_GetLogs_Handler,
		},
		{
			MethodName: "Merge",
			Handler:    _FulcrumService_Merge_Handler,
		},
		{
			MethodName: "AddCity",
			Handler:    _FulcrumService_AddCity_Handler,
		},
		{
			MethodName: "UpdateName",
			Handler:    _FulcrumService_UpdateName_Handler,
		},
		{
			MethodName: "UpdateNumber",
			Handler:    _FulcrumService_UpdateNumber_Handler,
		},
		{
			MethodName: "DeleteCity",
			Handler:    _FulcrumService_DeleteCity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/fulcrumpb.proto",
}
